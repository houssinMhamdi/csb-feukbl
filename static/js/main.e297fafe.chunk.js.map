{"version":3,"sources":["features/user.js","features/theme.js","Componets/Login.js","Componets/Profile.js","App.js","index.js"],"names":["userSlice","createSlice","name","initialState","value","age","email","reducers","login","state","action","payload","logout","actions","themeSlice","changeColor","Login","dispatch","useDispatch","className","onClick","Profile","user","useSelector","theme","style","color","App","rootElement","document","getElementById","root","createRoot","store","configureStore","reducer","userreducer","themeReducer","render"],"mappings":"4JAIaA,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CAAEC,MAJQ,CAAEF,KAAM,GAAIG,IAAK,EAAGC,MAAO,KAKnDC,SAAU,CACRC,MAAO,SAACC,EAAOC,GACbD,EAAML,MAAQM,EAAOC,OACtB,EACDC,OAAQ,SAACH,GACPA,EAAML,MAAQ,CAAEF,KAAM,GAAIG,IAAK,EAAGC,MAAO,GAC1C,KAGE,EAA0BN,EAAUa,QAA5BL,EAAR,EAAQA,MAAOI,EAAf,EAAeA,OAEPZ,IAAf,QCfac,EAAab,YAAY,CACpCC,KAAM,QACNC,aAAc,CAAEC,MAHG,IAInBG,SAAU,CACRQ,YAAa,SAACN,EAAOC,GACnBD,EAAML,MAAQM,EAAOC,OACtB,KAKUG,GADgBA,EAAWD,QAA3BE,YACAD,EAAf,S,OCZe,SAASE,IACtB,IAAMC,EAAWC,cACjB,OACE,sBAAKC,UAAU,MAAf,UACE,wBACEC,QAAS,WACPH,EACET,EAAM,CAAEN,KAAM,UAAWG,IAAK,GAAIC,MAAO,sBAE5C,EALH,mBASA,wBACEc,QAAS,WACPH,EAASL,IACV,EAHH,sBASL,CCvBc,SAASS,IACtB,IAAMC,EAAOC,aAAY,SAACd,GAAD,OAAWA,EAAMa,KAAKlB,KAAtB,IACnBoB,EAAQD,aAAY,SAACd,GAAD,OAAWA,EAAMe,MAAMpB,KAAvB,IAC1B,OACE,sBAAKe,UAAU,MAAMM,MAAO,CAAEC,MAAOF,GAArC,UACE,8CACA,uCAAUF,EAAKpB,QACf,sCAASoB,EAAKjB,OACd,wCAAWiB,EAAKhB,WAGrB,C,MCRc,SAASqB,IACtB,OACE,sBAAKR,UAAU,MAAf,UACE,cAACE,EAAD,IACA,cAACL,EAAD,MAGL,CCHD,IAAMY,EAAcC,SAASC,eAAe,QACtCC,EAAOC,qBAAWJ,GAClBK,EAAQC,YAAe,CAC3BC,QAAS,CACPb,KAAMc,EACNZ,MAAOa,KAIXN,EAAKO,OACH,cAAC,aAAD,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAACN,EAAD,Q","file":"static/js/main.e297fafe.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialStateValue = { name: \"\", age: 0, email: \"\" };\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: { value: initialStateValue },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.value = { name: \"\", age: 0, email: \"\" };\r\n    }\r\n  }\r\n});\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialvalue = \"\";\r\nexport const themeSlice = createSlice({\r\n  name: \"theme\",\r\n  initialState: { value: initialvalue },\r\n  reducers: {\r\n    changeColor: (state, action) => {\r\n      state.value = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { changeColor } = themeSlice.actions;\r\nexport default themeSlice.reducer;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { login, logout } from \"../features/user\";\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"App\">\r\n      <button\r\n        onClick={() => {\r\n          dispatch(\r\n            login({ name: \"houssin\", age: 20, email: \"houssin@gmail.com\" })\r\n          );\r\n        }}\r\n      >\r\n        Login\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          dispatch(logout());\r\n        }}\r\n      >\r\n        LogOut\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nexport default function Profile() {\r\n  const user = useSelector((state) => state.user.value);\r\n  const theme = useSelector((state) => state.theme.value);\r\n  return (\r\n    <div className=\"App\" style={{ color: theme }}>\r\n      <h1>profile page</h1>\r\n      <h1>name:{user.name}</h1>\r\n      <h1>age:{user.age}</h1>\r\n      <h1>email:{user.email}</h1>\r\n    </div>\r\n  );\r\n}\r\n","import Login from \"./Componets/Login\";\nimport Profile from \"./Componets/Profile\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Profile />\n      <Login />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport userreducer from \"./features/user\";\nimport themeReducer from \"./features/theme\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nconst store = configureStore({\n  reducer: {\n    user: userreducer,\n    theme: themeReducer\n  }\n});\n\nroot.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>\n);\n"],"sourceRoot":""}